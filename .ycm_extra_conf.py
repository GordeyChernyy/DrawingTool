# Generated by YCM Generator at 2015-12-16 19:55:45.659160

# This file is NOT licensed under the GPLv3, which is the license for the rest
# of YouCompleteMe.
#
# Here's the license text for this file:
#
# This is free and unencumbered software released into the public domain.
#
# Anyone is free to copy, modify, publish, use, compile, sell, or
# distribute this software, either in source code form or as a compiled
# binary, for any purpose, commercial or non-commercial, and by any
# means.
#
# In jurisdictions that recognize copyright laws, the author or authors
# of this software dedicate any and all copyright interest in the
# software to the public domain. We make this dedication for the benefit
# of the public at large and to the detriment of our heirs and
# successors. We intend this dedication to be an overt act of
# relinquishment in perpetuity of all present and future rights to this
# software under copyright law.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# For more information, please refer to <http://unlicense.org/>

import os
import ycm_core

flags = [
    '-x',
    'c++',
    '-DNDEBUG',
    '-D__MACOSX_CORE__',
    '-I../../../libs/FreeImage/include',
    '-I../../../libs/boost/include',
    '-I../../../libs/boost/include/boost',
    '-I../../../libs/cairo/include',
    '-I../../../libs/cairo/include/cairo',
    '-I../../../libs/fmodex/include',
    '-I../../../libs/freetype/include',
    '-I../../../libs/freetype/include/freetype2',
    '-I../../../libs/freetype/include/freetype2/config',
    '-I../../../libs/freetype/include/freetype2/internal',
    '-I../../../libs/freetype/include/freetype2/internal/services',
    '-I../../../libs/glew/include',
    '-I../../../libs/glew/include/GL',
    '-I../../../libs/glfw/include',
    '-I../../../libs/glfw/include/GLFW',
    '-I../../../libs/glut/include',
    '-I../../../libs/openFrameworks',
    '-I../../../libs/openFrameworks/3d',
    '-I../../../libs/openFrameworks/app',
    '-I../../../libs/openFrameworks/communication',
    '-I../../../libs/openFrameworks/events',
    '-I../../../libs/openFrameworks/gl',
    '-I../../../libs/openFrameworks/graphics',
    '-I../../../libs/openFrameworks/math',
    '-I../../../libs/openFrameworks/sound',
    '-I../../../libs/openFrameworks/types',
    '-I../../../libs/openFrameworks/utils',
    '-I../../../libs/openFrameworks/video',
    '-I../../../libs/openssl/include',
    '-I../../../libs/openssl/include/openssl',
    '-I../../../libs/poco/include',
    '-I../../../libs/rtAudio/include',
    '-I../../../libs/tess2/include',
    '-I../../../libs/utf8cpp/include',
    '-I../../../libs/utf8cpp/include/utf8',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxGui/src',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxKinect/libs',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxKinect/libs/libfreenect',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxKinect/libs/libfreenect/include',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxKinect/libs/libfreenect/platform',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxKinect/libs/libfreenect/src',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxKinect/libs/libusb-1.0',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxKinect/libs/libusb-1.0/include',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxKinect/libs/libusb-1.0/include/libusb-1.0',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxKinect/libs/libusb-1.0/lib',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxKinect/libs/libusb-1.0/lib/osx',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxKinect/libs/libusb-win32',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxKinect/src',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxKinect/src/extra',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/include',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/include/opencv',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/include/opencv2',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/include/opencv2/calib3d',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/include/opencv2/contrib',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/include/opencv2/core',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/include/opencv2/features2d',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/include/opencv2/flann',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/include/opencv2/gpu',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/include/opencv2/gpu/device',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/include/opencv2/gpu/device/detail',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/include/opencv2/highgui',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/include/opencv2/imgproc',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/include/opencv2/legacy',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/include/opencv2/ml',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/include/opencv2/nonfree',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/include/opencv2/objdetect',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/include/opencv2/photo',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/include/opencv2/stitching',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/include/opencv2/stitching/detail',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/include/opencv2/superres',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/include/opencv2/ts',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/include/opencv2/video',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/include/opencv2/videostab',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/lib',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/lib/emscripten',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/lib/osx',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/libs/opencv/license',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxOpenCv/src',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxSvg/libs',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxSvg/libs/svgTiny',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxSvg/libs/svgTiny/src',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxSvg/src',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxXmlSettings/libs',
    '-I/Users/gordey/of_v0.9.0_osx_release/addons/ofxXmlSettings/src',
    '-I/Users/gordey/of_v0.9.0_osx_release/apps/myApps/DrawingTool/DrawingTool.xcodeproj/project.xcworkspace',
    '-I/Users/gordey/of_v0.9.0_osx_release/apps/myApps/DrawingTool/DrawingTool.xcodeproj/project.xcworkspace/xcshareddata',
    '-I/Users/gordey/of_v0.9.0_osx_release/apps/myApps/DrawingTool/DrawingTool.xcodeproj/project.xcworkspace/xcuserdata',
    '-I/Users/gordey/of_v0.9.0_osx_release/apps/myApps/DrawingTool/DrawingTool.xcodeproj/project.xcworkspace/xcuserdata/adhulip.xcuserdatad',
    '-I/Users/gordey/of_v0.9.0_osx_release/apps/myApps/DrawingTool/DrawingTool.xcodeproj/project.xcworkspace/xcuserdata/gordey.xcuserdatad',
    '-I/Users/gordey/of_v0.9.0_osx_release/apps/myApps/DrawingTool/DrawingTool.xcodeproj/xcshareddata',
    '-I/Users/gordey/of_v0.9.0_osx_release/apps/myApps/DrawingTool/DrawingTool.xcodeproj/xcshareddata/xcschemes',
    '-I/Users/gordey/of_v0.9.0_osx_release/apps/myApps/DrawingTool/DrawingTool.xcodeproj/xcuserdata',
    '-I/Users/gordey/of_v0.9.0_osx_release/apps/myApps/DrawingTool/DrawingTool.xcodeproj/xcuserdata/adhulip.xcuserdatad',
    '-I/Users/gordey/of_v0.9.0_osx_release/apps/myApps/DrawingTool/DrawingTool.xcodeproj/xcuserdata/adhulip.xcuserdatad/xcdebugger',
    '-I/Users/gordey/of_v0.9.0_osx_release/apps/myApps/DrawingTool/DrawingTool.xcodeproj/xcuserdata/adhulip.xcuserdatad/xcschemes',
    '-I/Users/gordey/of_v0.9.0_osx_release/apps/myApps/DrawingTool/DrawingTool.xcodeproj/xcuserdata/gordey.xcuserdatad',
    '-I/Users/gordey/of_v0.9.0_osx_release/apps/myApps/DrawingTool/DrawingTool.xcodeproj/xcuserdata/gordey.xcuserdatad/xcdebugger',
    '-I/Users/gordey/of_v0.9.0_osx_release/apps/myApps/DrawingTool/DrawingTool.xcodeproj/xcuserdata/gordey.xcuserdatad/xcschemes',
    '-I/Users/gordey/of_v0.9.0_osx_release/apps/myApps/DrawingTool/src',
    '-Wall',
    '-std=c++11',
]


# Set this to the absolute path to the folder (NOT the file!) containing the
# compile_commands.json file to use that instead of 'flags'. See here for
# more details: http://clang.llvm.org/docs/JSONCompilationDatabase.html
#
# You can get CMake to generate this file for you by adding:
#   set( CMAKE_EXPORT_COMPILE_COMMANDS 1 )
# to your CMakeLists.txt file.
#
# Most projects will NOT need to set this to anything; you can just change the
# 'flags' list of compilation flags. Notice that YCM itself uses that approach.
compilation_database_folder = ''

if os.path.exists( compilation_database_folder ):
  database = ycm_core.CompilationDatabase( compilation_database_folder )
else:
  database = None

SOURCE_EXTENSIONS = [ '.cpp', '.cxx', '.cc', '.c', '.m', '.mm' ]

def DirectoryOfThisScript():
  return os.path.dirname( os.path.abspath( __file__ ) )


def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):
  if not working_directory:
    return list( flags )
  new_flags = []
  make_next_absolute = False
  path_flags = [ '-isystem', '-I', '-iquote', '--sysroot=' ]
  for flag in flags:
    new_flag = flag

    if make_next_absolute:
      make_next_absolute = False
      if not flag.startswith( '/' ):
        new_flag = os.path.join( working_directory, flag )

    for path_flag in path_flags:
      if flag == path_flag:
        make_next_absolute = True
        break

      if flag.startswith( path_flag ):
        path = flag[ len( path_flag ): ]
        new_flag = path_flag + os.path.join( working_directory, path )
        break

    if new_flag:
      new_flags.append( new_flag )
  return new_flags


def IsHeaderFile( filename ):
  extension = os.path.splitext( filename )[ 1 ]
  return extension in [ '.h', '.hxx', '.hpp', '.hh' ]


def GetCompilationInfoForFile( filename ):
  # The compilation_commands.json file generated by CMake does not have entries
  # for header files. So we do our best by asking the db for flags for a
  # corresponding source file, if any. If one exists, the flags for that file
  # should be good enough.
  if IsHeaderFile( filename ):
    basename = os.path.splitext( filename )[ 0 ]
    for extension in SOURCE_EXTENSIONS:
      replacement_file = basename + extension
      if os.path.exists( replacement_file ):
        compilation_info = database.GetCompilationInfoForFile(
          replacement_file )
        if compilation_info.compiler_flags_:
          return compilation_info
    return None
  return database.GetCompilationInfoForFile( filename )


def FlagsForFile( filename, **kwargs ):
  if database:
    # Bear in mind that compilation_info.compiler_flags_ does NOT return a
    # python list, but a "list-like" StringVec object
    compilation_info = GetCompilationInfoForFile( filename )
    if not compilation_info:
      return None

    final_flags = MakeRelativePathsInFlagsAbsolute(
      compilation_info.compiler_flags_,
      compilation_info.compiler_working_dir_ )

  else:
    relative_to = DirectoryOfThisScript()
    final_flags = MakeRelativePathsInFlagsAbsolute( flags, relative_to )

  return {
    'flags': final_flags,
    'do_cache': True
  }

